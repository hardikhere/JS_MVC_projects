{"version":3,"sources":["src/js/model.js","src/js/Views/AddTransactionView.js","src/js/config.js","src/js/Views/ShowBalanceView.js","src/js/Views/ExpenseTrackerView.js","src/js/Views/IncomeTrackerView.js","src/js/Views/index.js","src/js/controller.js"],"names":["transactionType","INCOME","EXPENSE","Transaction","type","value","Math","random","isNaN","TypeError","Error","_type","_value","id","timestamp","Date","now","list","localStorage","getItem","toSave","time","JSON","parse","push","setItem","stringify","AddTransactionView","document","querySelector","_form","handler","self","addEventListener","e","clearForm","ev","CustomEvent","detail","bubbles","_amount","dispatchEvent","console","log","parseFloat","CURRENCY_UNIT","ShowBalanceView","_parentElement","data","balance","getTotalBalance","_container","innerHTML","bind","totalIncome","income","forEach","inc","totalExpense","expense","exp","Number","toFixed","toLocaleString","minimumFractionDigits","getFormatedBalance","ExpenseTrackerView","html","_body_container","Array","isArray","el","date","toDateString","IncomeTrackerView","getTransactionsFromLS","saveTransactionInLS","transaction","controlAddTransaction","event","preventDefault","amount","controlShowBalance","render","controlUpdateExpenseList","controlUpdateIncomeList","init","addSubmitHandler","addRenderListnerHandler","addRenderHandler"],"mappings":";;AOAA;;AACA;;ALDO,AKIP,ILJa6C,AKIP8B,aLJoB,GAAG,IAAtB,CKIoB,GAAG,SAAxBA,qBAAwB,CAACvE,IAAD,EAAU;AHJxC,ACAA,AFAA,AIKI,SAAOkB,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqBf,IAArB,KAA8B,IAAzC,CAAP;AACH,CAFD;;AAIA,IAAMwE,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACxE,IAAD,EAAOyE,WAAP,EAAuB;AAC/C,MAAI5D,IAAI,GAAG0D,qBAAqB,CAACvE,IAAD,CAAhC;AACAa,EAAAA,IAAI,CAACO,IAAL,CAAUqD,WAAV;AACA5D,EAAAA,IAAI,GAAGK,IAAI,CAACI,SAAL,CAAeT,IAAf,CAAP;AACAC,EAAAA,YAAY,CAACO,OAAb,CAAqBrB,IAArB,EAA2Ba,IAA3B;AACH,CALD,GNPMU;;AMcN,IAAMmD,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAW;AACrCA,EAAAA,KAAK,CAACC,cAAN;AACA,APjBG,IAAMhF,EOiBDiF,MAAR,GAAyBtD,IPjBD,GAAG,aCEnBC,KMeR,CAAQqD,ENfQ,CAACpD,GMejB,UNfQ,CAAuB,uBAAvB;AMeR,APhBA5B,EAAAA,IOgBgBG,EPhBV,EOgBN,APhBQ,GOgBiBuB,KPjBE,oBOiB3B,CAAgBvB,IAAhB;AACAsC,APhBAxC,EOgBAwC,APhBAxC,EGAE4C,KIgBK,APhBA,COgBCH,CPhBC,EOgBT,CAAYsC,MAAZ,EAAoB7E,IAApB,WNfU,KAAK0B,KAAL,CAAWD,aAAX,CAAyB,SAAzB;AMgBV,APnB2B,CAAxB,KOmBGgD,WAAW,GAAG,IAAI1E,kBAAJ,CAAgBC,IAAhB,EAAsB6E,MAAtB,CAApB;AACAL,EAAAA,EHlBEV,ACAAQ,iBEkBiB,CAACtE,IAAD,EAAOyE,ONhBlB,IMgBW,CNhBN/C,AMgBb,KNhBQ,CAAWD,aAAX,CAAyB,mBAAzB;;AMiBRF,4BAAmBQ,SAAnB;AACH,CAPD;IPVahC,wCGFQyB,QAAQ,CAACC,aAAT,CAAuB,4BAAvB;AIuBrB,APlBI,IOkBEqD,ONrBF,WMqBoB,CPlBR9E,EOkBW,EPlBvB,EAAkBC,KOkBhB6E,APlBF,EAAyB,CCHRnD,OAAjB,EAA0B,MMqBH,GAAM;ANpBzB,AMqBJW,APnByB,EOmBzBA,OAAO,CNrBGV,AMqBFW,GAAR,CNrBc,AMqBF,GNrBK,IAAb,mBEFS,KAAKI,EIuBlB,YJvBa,CAAoBlB,aAApB,CAAkC,oBAAlC;AGJjB,AC4BI,MAAM0B,MAAM,GAAGoB,qBAAqB,CAAC3E,uBAAgBC,MAAjB,CAApC;ANrBI,AMsBJ,APrByB,MOqBnB0D,KNtBG7B,EMsBI,GNtBT,AMsBY6C,CNtBD1C,gBAAX,CAA4B,GMsBK,CAACjC,EH1BzB4B,ACAAA,EJIT,EAAsC,IGJrB,ACAA,CDACC,ACAAA,KJIqBK,CAAD,EAAO,IMsBKhC,CH1BzC,ACAA,CDAuB,ACAA,KE0BC,CAArC,aF1Ba,EDAA;AHKL6B,AKPZ,ANO6B,QCAjBA,OAAO,CAACG,CAAD,CAAP;AACAF,AMqBRc,APtByB,QCCjBd,IAAI,CAACG,SAAL,GMqBQgD,GPxBE7E,GOwBlB,CAAuB,APxBD,CAACC,MAAL,KAAgB,CIFhBqB,ACAAA,ELIO,MIJC,ACAA,CDACC,ACAAA,aDAT,ACAA,CDAuB,ACAA,iBDAvB,ACAA;AJMV,AKRZ,AC6BQ0B,APvBqB,IOuBrBA,MAAM,CJ1BV,CFKcnB,AMqBVmB,ENrBY,GAAG,CMoBI,GNpBAlB,MELhBW,IAAP,CFKmB,CAAgB,AELtB,eFKM,EAAiC;AACxCV,AELR,AI0BAqB,IAAAA,MNrBQrB,CELHU,AI0BE,EAAPW,EJ1BA,CFKc,EAAE,AELJX,IAAZ;AFMY5C,AELZ,AGJR,AC2B2B,APrBnB,GOqBJ,KPrBQ,EGFE6C,EFKM7C,GDHDC,CCGK,CELH,CFKK2B,EELF,AHEZ,ECGkB,CAACrB,EELFuC,AHEA,GCGH,CAAW7C,IDHzB,IAA6BG,GGFjB,EAAhB,AHEsC,CAACH,KAAD,CAAtC,EACI,MAAM,IAAII,SAAJ,CAAc,sBAAd,CAAN;ACCY,AEHhBiC,AI0BP,APvBO,COeR,KJlBQA,EHGI,EAAEtC,CCD0C,EEFzC,CAACuC,AHGE,GGHV,CAAY,AHGE3C,aGHd,EAA2B,AHGvB,CAAJ,EACI,EGJ4BiD,IHItB,GGJV,CHIcvC,KAAJ,CAAU,qCAAV,CAAN;ACEI6B,AELR,AHIA,SAAK5B,CCCG4B,CGTZ,ACAA,AFISY,GHIL,GCCe,ADDF/C,ECCI,EELjB,AHIA,CGJgBgD,KCJbJ,ACAAA,IDAP,ACAA,AFII,ECJS,ACAA,wBFImB,IAA5B,kDAA4B,IAA5B;AFCgD,AGJhD,ACAA,AFIH,AI0BL,APtBQ,IOsBFoC,KN1BiB,ADIVxE,CCJD,CGJCoC,ACAAA,IDAL,ACAA,ALQA,GIRYA,ACAAA,ALQE3C,IIRd,ACAA,CLQA,KOsBsB,GAAG,SAA3B+E,wBAA2B,CAAChD,EAAD,EAAQ;AACrC,APtBI,MOsBAA,EAAE,CAACE,APtBEzB,EAAL,IOsBA,CAAUT,IAAV,IPtBaA,COsBMJ,GPtBnB,cAAqBK,KAArB,COsBmCH,OAAvC,EACIgE,0BAAmBiB,APvBW,IAA9B,EOuBA,CAA0BR,qBAAqB,CAAC3E,uBAAgBE,OAAjB,CAA/C;ANtBI8B,AGTJ,ACAA,AEgCP,APvBO,COoBR,ONpBYA,CDAClB,CITCqD,ACAAA,EJSE,CAAC3B,CGTC,ACAA,ILSV,ECAI,CAAaC,ADAA1B,IAAI,CAACC,GAAL,EAAjB,GCAI,CAA2BoB,EAA3B,GGTS,ACAA,IDAH,ACAA,kDDAG,ACAA,IDAH,ACAA,CDAV,ACAA;ALUH,WGLD,iCAAwBL,OAAxB,EAAiC;AFKzBW,AGTJ,ACAA,AFKA,AI4BR,IAAM2C,INxBM3C,GGTCS,ACAAA,AFKAJ,IFIM,CAACJ,GAAR,CAAYP,CGThB,ACAA,CJSI,AGTYgB,ACAAA,GFKhB,CAAoBnB,CI4BC,GAAG,CHjCxB,ACAA,GDA4BkC,ACAAA,IDA5B,ACAA,CEiCFkB,GJ5BE,CAAqC,eAArC,EAAsDtD,EI4B9B,CAACK,EAAD,EJ5BqC,AI4B7B,CJ5B8BiB,IAAR,CAAa,IAAb,CAAtD;AFKC,AGTJ,ACAA,AFKA,AI4BD,MAAIjB,CNnCA,CMmCE,CAACE,MAAH,CAAUlC,IAAV,KAAmBJ,uBAAgBC,MAAvC,EACIyE,yBAAkBS,MAAlB,CAAyBR,qBAAqB,CAAC3E,uBAAgBC,MAAjB,CAA9C;ANxBH,AMyBJ,CAHD;WPtBI,+BAAsB;AO2B1B,AP1BQ,IO0BFqF,IAAI,EP1BErE,CITR,ACAA,AFgBA,AImBS,GP1BG,GAAGC,GO0BboE,IAAO,GAAM,EP1BY,CAACnE,OITXY,ACAAA,ALSF,CGOG,AHPkB,MITpC,ACAA,EDA0B,ACAA,MLSX,CAAX;AIRA,ACAA,AFgBA,AImBJJ,AP1BI,UGOI2B,AHPAlC,CCAR,AGTSgD,ACAAA,KLSK,GAAG,EGOE,GAAG,CAAlB,CChBA,ACAA,CDAqBnC,ACAAA,CEmCNsD,IN1BP,WGTR,ACAA,CDAsC,ACAA,AEmC1C,CAAoCT,cHnChC,ACAA,EDAuD/C,ACAAA,KEmC3D,EHnCkE,ACAA,CDACsB,ACAAA,IDAR,ACAA,CDAa,ACAA,IDAb,ACAA,CDAvD,ACAA;AJUA,AGTH,ACAA,AFgBG,AHPIjD,QAAAA,GCACoC,AEOAQ,CHPG,EAAE,CGOV,CAAUO,EFPV,CAAalD,ADAEM,GGOf,CAAiB6C,CFPjB,ADDa,GCCQ,EAArB,CEOA,CAAyB,UAAAC,GAAG,EAAI;AFNnC,AEOOH,AIkBRR,APzBQzC,QGOAiD,AHPAjD,KAAK,EAAE,IGOI,CHPCO,GGOG6C,EIkBP+B,CJlBU,AHTT,CGSU5E,MAAnB,eIkBR,CAAwCsE,kBAAxC;AJjBK,AHPG7D,OGKJ,CHLIA,IAAI,EAAE,KAAKP,SAHF;AGWb,AIiBJoE,APxBQrE,EOwBRqE,MPxBQrE,EGOA6C,AHPE,EAAE,KAAK7C,GOwBC,EJjBE,GAAG,CAAnB;AACA,AHZa,OAAb,ECIJ,EEQSmC,IAAL,CAAUW,OAAV,CFRS,AEQSH,OAAlB,CAA0B,UAAAI,GAAG,EAAI;AFPjC,AEQIF,AIgBRQ,QJhBQR,KFRGd,OEQS,GFRC,CAAC,AEQEgB,GAAG,CAAChD,AIgBT6E,CNxBQjD,KEQnB,EFRc,CAAanC,KAAd,CAAjB,CMwBJ,CAAoC+E,wBAApC;ANvBC,AEQI,AHRD,OGMA,GHNInE,IAAJ,EAAU,gBIZQ,ACAA;ADAA,ACAA,AFqBlB,AIeJiD,APvBQjD,QAAAA,GGQCgC,CHRG,GAAG3B,GGQX,CHRe,CAACC,CGQD+B,IHRJ,CAAWrC,EOuBPkE,EPvBJ,CAAP,CGQsB,EIe9B,CJfiCzB,AIePiB,YJftB,SIe2C,CAAC3E,uBAAgBE,OAAjB,CAA/C;AJdC,AHROe,QAAAA,IAAI,CAACO,IAAL,CAAUJ,MAAV;AIbJ,ACAA,AEoCJsD,APtBK,MIdGP,ACAAA,CLWJ,ECEJ,CGbY,ACAA,GLeH,WCFE,GMuBOsB,gBAAlB,CAAmCJ,uBHpC/B,ACAA,AEoCJ;ANtBI,ADEIpE,QAAAA,IAAI,CCFD,EDEI,CAACG,ECFAT,IDED,CCFJ,ADEH,CCFcN,KAAlB;AACH,AGdG,ACAA,AEoCJqE,APpBK,MIhBGL,ACAAA,KDAK,ACAA,AFsBb,CCtBcC,ACAAA,ODAN,ACAA,CDAc,ACAA,KDAKtB,ACAAA,EEoCTmC,EHpCV,ACAA,CDAJ,ACAA,EDA8B,ACAA,CEoClC,CAAyBR,OJdJ,cIcyB,CAAC3E,uBAAgBC,MAAjB,CAA9C;AHnCQ,ACAA,AFsBJ,AIcP,CARD,QH5BiB+C,ACAAA,IDAL,ACAA,AFsBGa,CCtBOL,ACAAA,KFsBD,CAACZ,CCtBV,ACAA,CDAkB,ACAA,QFsBE,CAAC,CCtBH2B,ACAAA,EDAE,ACAA,EDAI,ACAA,AFsBEtB,OAAN,CAAV,CAAyBa,OAAzB,CAAiC,CAAjC,CAAD,CAAN,CAA4CC,cAA5C,CAA2D,IAA3D,EAAiE;ACrBhEI,ACAAA,AFsBJH,AHPJ9C,MIfQiD,ACAAA,ALeRjD,EGOI8C,ECtBQ,ACAA,QLeA,CAACvC,OAAb,CAAqB,EGOI,EAAE,UHP3B,EAAqCH,IAAI,CAACI,SAAL,CAAeT,IAAf,CAArC,4IIb0DsD,EAAE,CAAC3D,ACAA2D,EAAE,CAAC3D,GDFpD,GCAA,WDE2DiC,GCAGA,kBDF9D,GCAA,8DDGG,ICAC,CDHJ,ICAA,8CDGG,ICAC,CDHJ,EAG4B0B,EAAE,ACH9B,CDG+BzD,CCAFyD,EAAE,CAACzD,KDHhC,ICAA,iDDAJ,KCAA;ADMH,ACAA,AFemE,AIehFwE,APpBK,IOoBD,CHrCQ,ACAA,EFsBG,CAAP;ACdC,ACAA,AFiBJ;;AChBGnB,ACAAA,EDAAA,ACAAA,IDAI,ACAA,IDAI,ACAA,KJOD,GGPP,ACAA,CJOWxC,kBAAJ;AGNP,ACAA,SDAOwC,ACAAA,IDAP,ACAA;ADCH,ACAA;;ALOJ,8BILuBrD,ACAAA,EFfE,SCeQ,ACAA;ADC1B,ACAA,AFfA,MCeI0D,ACAAA,IDAI,ACAA,GDAI,ACAA,IDAIzD,ACAAA,IDAJ,ACAA,CDASD,ACAAA,SDAT,ACAA,CDAZ,ACAA,8IFZ8B,KAAKmC,OAAL,GAAe,CAAf,GAAmB,OAAnB,GAA6B,KAH3D,+BAIOJ,qBAJP,cAIwB,KAAKoB,kBAAL,EAJxB;ACgBA,ACAA,AFRH,SCQUO,ACAAA,IDAI,ACAA,CDACC,ACAAA,YDAL,ACAA,EDAP,ACAA;ADCH,ACAA;AFUJ;ACTA,ACAA;eFWc,IAAI3B,eAAJ;eCTA,ACAA,IDAIoB,ACAAQ,iBAAJ,CDAA","file":"controller.e87f5190.js","sourceRoot":"..","sourcesContent":["export const transactionType = {\n    INCOME: \"INCOME\",\n    EXPENSE: \"EXPENSE\"\n};\n\nexport class Transaction {\n    #secret = `adsad${Math.random() * 100}`;\n\n    constructor(type, value) {\n        if (typeof value !== \"number\" || isNaN(value))\n            throw new TypeError(\"value must be number\")\n        if (!(type in transactionType))\n            throw new Error(\"type must be INCOME or EXPENSE only\");\n        this._type = type;\n        this._value = value;\n        this.id = `${type}-${value}-${this.#secret}`;\n        this.timestamp = Date.now();\n    }\n\n    saveTransactionInLS() {\n        let list = localStorage.getItem(\"transactions\");\n        let toSave = {\n            type: this._type,\n            value: this._value,\n            time: this.timestamp,\n            id: this.id\n        }\n        if (list) {\n            list = JSON.parse(list);\n            list.push(toSave)\n        }\n        else {\n            list = [toSave];\n        }\n        localStorage.setItem(\"transactions\", JSON.stringify(list))\n    }\n};\n\n","\nclass AddTransactionView {\n    _form = document.querySelector(\".add_transaction_form\");\n    _amount = this._form.querySelector(\".amount\")\n    _type = this._form.querySelector(\".transaction_type\")\n    addSubmitHandler(handler) {\n        const self = this;\n        this._form.addEventListener(\"submit\", (e) => {\n            handler(e);\n            self.clearForm();\n            const ev = new CustomEvent(\"StorageChange\", {\n                detail: {\n                    type: self._type.value\n                },\n                bubbles: true\n            });\n            self._amount.dispatchEvent(ev);\n            console.log(ev)\n        });\n    }\n\n    clearForm() {\n        this._amount.value = \"\";\n    }\n\n    get amount() {\n        return parseFloat(this._amount.value);\n    }\n\n    get type() {\n        return this._type.value;\n    }\n}\n\nexport default new AddTransactionView();","export const CURRENCY_UNIT = \"Rs\"","import { CURRENCY_UNIT } from \"../config\";\n\nclass ShowBalanceView {\n    _parentElement = document.querySelector(\".add_transaction_container\");\n    _container = this._parentElement.querySelector(\".balance_container\");\n    render(data) {\n        this.data = data;\n        const balance = this.getTotalBalance();\n        console.log(\"balance is \", this.balance)\n        this._container.innerHTML = this.#generateHTMLString();\n    };\n\n    addRenderListnerHandler(handler) {\n        this._parentElement.addEventListener(\"StorageChange\", handler.bind(this));\n    }\n\n    #generateHTMLString() {\n        return `\n        <div style=\"display:flex;flex-direction:column;align-items:center;\"> \n            <h5>Your Balance</h5>\n           <div class=\"balance bold ${this.balance > 0 ? \"green\" : \"red\"}\">\n             ${CURRENCY_UNIT} ${this.getFormatedBalance()}\n           </div>\n        </div>\n        `\n    };\n\n    getTotalBalance() {\n        let totalIncome = 0;\n        this.data.income.forEach(inc => {\n            totalIncome += inc._value;\n        });\n        let totalExpense = 0;\n        this.data.expense.forEach(exp => {\n            totalExpense += exp._value\n        });\n        this.balance = totalIncome - totalExpense;\n    };\n\n    getFormatedBalance() {\n        return Number(parseFloat(this.balance).toFixed(2)).toLocaleString('en', {\n            minimumFractionDigits: 2\n        })\n    }\n};\n\nexport default new ShowBalanceView();","import { CURRENCY_UNIT } from \"../config\";\n\nclass ExpenseTrackerView {\n    _container = document.querySelector(\".expenses_container\");\n    _body_container = document.querySelector(\".body_container\")\n    render(data) {\n        this.data = data;\n        const html = this.#generateHTMLString();\n        this._container.innerHTML = html;\n    }\n\n    addRenderHandler(handler) {\n        this._body_container.addEventListener(\"StorageChange\", handler.bind(this))\n    }\n\n    #generateHTMLString() {\n        let html = `<div style=\"overflow=auto;width=100%;height=100%\">`;\n        if (Array.isArray(this.data)) {\n            this.data.forEach(el => {\n                html += `\n                <div class=\"card transaction_card\" style=\"display:flex; justify-content:space-between\">\n                <div class=\"red\" style=\"font-weight:bolder;\"> - ${el._value} ${CURRENCY_UNIT}</div>\n                <div>${this.#getDateByTimeStamp(el.timestamp)}</div>\n               </div>\n                `\n            })\n        }\n        html += '</div>';\n        return html;\n    }\n\n    #getDateByTimeStamp(timestamp){\n        let date =  new Date(timestamp);\n        return date.toDateString();\n    }\n};\n\nexport default new ExpenseTrackerView();","import { CURRENCY_UNIT } from \"../config\";\n\nclass IncomeTrackerView {\n    _container = document.querySelector(\".income_container\");\n    _body_container = document.querySelector(\".body_container\")\n    render(data) {\n        this.data = data;\n        const html = this.#generateHTMLString();\n        this._container.innerHTML = html;\n    }\n\n    addRenderHandler(handler) {\n        this._body_container.addEventListener(\"StorageChange\", handler.bind(this))\n    }\n\n    #generateHTMLString() {\n        let html = `<div style=\"overflow=auto;width=100%;height=100%\">`;\n        if (Array.isArray(this.data)) {\n            this.data.forEach(el => {\n                html += `\n                <div class=\"card transaction_card\" style=\"display:flex; justify-content:space-between\">\n                 <div class=\"green\" style=\"font-weight:bolder;\"> + ${el._value} ${CURRENCY_UNIT}</div>\n                 <div>${this.#getDateByTimeStamp(el.timestamp)}</div>\n                </div>\n                `\n            })\n        }\n        html += '</div>';\n        return html;\n    }\n\n    #getDateByTimeStamp(timestamp){\n        let date =  new Date(timestamp);\n        return date.toDateString();\n    }\n};\n\nexport default new IncomeTrackerView();","import AddTransactionView from \"./AddTransactionView\"\nimport ShowBalanceView from \"./ShowBalanceView\"\nimport ExpenseTrackerView from \"./ExpenseTrackerView\"\nimport IncomeTrackerView from \"./IncomeTrackerView\"\nexport {\n    AddTransactionView,\n    ShowBalanceView,\n    ExpenseTrackerView,\n    IncomeTrackerView\n}","import { Transaction, transactionType } from \"./model\";\nimport { AddTransactionView, ShowBalanceView, ExpenseTrackerView, IncomeTrackerView } from \"./Views\"\n\n\nconst getTransactionsFromLS = (type) => {\n    return JSON.parse(localStorage.getItem(type) || '[]')\n}\n\nconst saveTransactionInLS = (type, transaction) => {\n    let list = getTransactionsFromLS(type);\n    list.push(transaction);\n    list = JSON.stringify(list);\n    localStorage.setItem(type, list);\n}\n\nconst controlAddTransaction = (event) => {\n    event.preventDefault();\n    const { amount, type } = AddTransactionView;\n    console.log(amount, type)\n    const transaction = new Transaction(type, amount);\n    saveTransactionInLS(type, transaction);\n    AddTransactionView.clearForm();\n}\n\n\n\nconst controlShowBalance = () => {\n    console.log(\"StorageChangeListener triggered\");\n    const income = getTransactionsFromLS(transactionType.INCOME);\n    const expense = getTransactionsFromLS(transactionType.EXPENSE);\n    ShowBalanceView.render({\n        income,\n        expense\n    })\n};\n\nconst controlUpdateExpenseList = (ev) => {\n    if (ev.detail.type === transactionType.EXPENSE)\n        ExpenseTrackerView.render(getTransactionsFromLS(transactionType.EXPENSE))\n};\n\nconst controlUpdateIncomeList = (ev) => {\n    if (ev.detail.type === transactionType.INCOME)\n        IncomeTrackerView.render(getTransactionsFromLS(transactionType.INCOME))\n}\n\nconst init = () => {\n    AddTransactionView.addSubmitHandler(controlAddTransaction);\n    ShowBalanceView.addRenderListnerHandler(controlShowBalance)\n    controlShowBalance();\n    ExpenseTrackerView.addRenderHandler(controlUpdateExpenseList)\n    ExpenseTrackerView.render(getTransactionsFromLS(transactionType.EXPENSE))\n    IncomeTrackerView.addRenderHandler(controlUpdateIncomeList)\n    IncomeTrackerView.render(getTransactionsFromLS(transactionType.INCOME))\n};\ninit();\n"]}